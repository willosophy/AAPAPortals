parameters:
    SolutionContentDirectory: ""
    SolutionName: ""
    TargetEnvironment: ""
  
stages:
  - stage: Build_${{ parameters.TargetEnvironment }}

    jobs:
      - job:
        displayName: "Build unmanaged solution"

        pool:
          vmImage: "vs2017-win2016"

        steps:
        - task: PowerAppsToolInstaller@0

        - task: PowerAppsPackSolution@0
          inputs:
            SolutionSourceFolder: '$(Build.SourcesDirectory)\${{ parameters.SolutionContentDirectory }}'
            SolutionOutputFile: '$(Pipeline.Workspace)\unmanaged-solutions\${{ parameters.solutionName }}.zip'
            SolutionType: Unmanaged

        - publish: $(Pipeline.Workspace)\unmanaged-solutions
          artifact: solution-artifacts
          displayName: Publish pipeline artifact - ${{ parameters.solutionName }}.zip

  - stage: Release_${{ parameters.TargetEnvironment }}

    jobs:
    # track deployments on the environment
    - deployment: Release
      displayName: Release unmanaged solution to ${{ parameters.TargetEnvironment }}
      pool:
        vmImage: "vs2017-win2016"

        # Automatically creates an environment in Azure DevOps with the name of the target environment
        # Allows tracking of deployments to that environment and enabling checks to gate deployments
      environment: Test

      strategy:
        runOnce:
          deploy:
            steps:
            # Artifact download happens automatically in a deployment job

            - task: PowerAppsToolInstaller@0

            - task: PowerAppsImportSolution@0
                inputs:
                  PowerAppsEnvironment: "${{ parameters.TargetEnvironment }}"
                  SolutionInputFile: '$(Pipeline.Workspace)\solution-artifacts\${{ parameters.solutionName }}.zip'
                  AsyncOperation: true
                  MaxAsyncWaitTime: "240"
